From 0f08c94340579849d66eb95adc76b8cf2320b1da Mon Sep 17 00:00:00 2001
From: Jason Andryuk <jandryuk@gmail.com>
Date: Fri, 20 Sep 2019 10:19:54 -0400
Subject: [PATCH 03/26] oxt: flask: Add openxt_guest_features.te

Introduce our own version of guest_features tailored for openxt.  We
duplicate write_console and the xen_t:version queries into a new file.

Then toggle guest_features off while enabling write_console.

Signed-off-by: Jason Andryuk <jandryuk@gmail.com>
---
 tools/flask/policy/modules/modules.conf       |  6 ++++-
 .../policy/modules/openxt_guest_features.te   | 24 +++++++++++++++++++
 2 files changed, 29 insertions(+), 1 deletion(-)
 create mode 100644 tools/flask/policy/modules/openxt_guest_features.te

diff --git a/tools/flask/policy/modules/modules.conf b/tools/flask/policy/modules/modules.conf
index 6dba0a3d91..b8bcabca70 100644
--- a/tools/flask/policy/modules/modules.conf
+++ b/tools/flask/policy/modules/modules.conf
@@ -16,7 +16,11 @@ dom0 = on
 
 # Allow all domains the ability to use access-controlled features and hypercalls
 # that are not restricted when XSM is disabled.
-guest_features = on
+guest_features = off
+
+# Allow all domains the ability to write to the Xen console and query version
+# info
+openxt_guest_features = on
 
 # The default domain type (domU_t) and its device model (dm_dom_t).  The domain
 # is created and managed by dom0_t, and has no special restrictions.
diff --git a/tools/flask/policy/modules/openxt_guest_features.te b/tools/flask/policy/modules/openxt_guest_features.te
new file mode 100644
index 0000000000..848606b2b4
--- /dev/null
+++ b/tools/flask/policy/modules/openxt_guest_features.te
@@ -0,0 +1,24 @@
+# Allow guest console output to the serial console.  This is used by PV Linux
+# and stub domains for early boot output, so don't audit even when we deny it.
+# Without XSM, this is enabled only if the Xen was compiled in debug mode.
+gen_bool(guest_writeconsole, true)
+if (guest_writeconsole) {
+	allow domain_type xen_t : xen writeconsole;
+} else {
+	dontaudit domain_type xen_t : xen writeconsole;
+}
+
+# For normal guests, allow all queries except XENVER_commandline.
+allow domain_type xen_t:version {
+	xen_capabilities xen_pagesize xen_guest_handle
+};
+
+# Version queries don't need auditing when denied.  They can be
+# encountered in normal operation by xl or by reading sysfs files in
+# Linux, so without this they will show up in the logs.  Since these
+# operations return valid responses (like "denied"), hiding the denials
+# should not break anything.
+dontaudit domain_type xen_t:version {
+	xen_commandline xen_build_id xen_extraversion
+	xen_extraversion xen_compile_info xen_changeset
+};
-- 
2.21.0

